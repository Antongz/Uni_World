#!/bin/bash
# runs vmtranslator over some test files
# it assumes tests are in the directory containing this script
# it assumes that the executable is in the parent directory

# outputs to check, one of parser or translator
case $1 in
tokens)
	command1=lib/w-tokens
	command2=lib/w-pretty-xml
	outputs=tokens
	echo "Testing w-tokens against tokens files."
	;;
demo-parser)
	command1=lib/w-parser
	command2=lib/w-pretty-xml
	outputs=Pxml
	echo "Testing working vmparser against Pxml files."
	;;
parser)
	command1=parser
	command2=lib/w-pretty-xml
	outputs=Pxml
	echo "Testing student vmparser against Pxml files."
	;;
parser-asm)
	command1=parser
	command2=lib/w-translator
	outputs=asm
	echo "Testing student vmparser and working vmtranslator against asm files."
	;;
parser-translator)
	command1=parser
	command2=translator
	outputs=asm
	echo "Testing student vmparser and student vmtranslator against asm files."
	;;
translator)
	command1=lib/w-parser
	command2=translator
	outputs=asm
	echo "Testing working vmparser and student vmtranslator against asm files."
	;;
*)
	command1=lib/w-parser
	command2=lib/w-translator
	outputs=asm
	echo "Testing working vmparser and working vmtranslator against asm files."
	;;
esac

# work out relative path to tests directory
THISPWD=`pwd`

# find the test directory name
TESTDIR=`dirname $0`
cd "$TESTDIR"
TESTPWD=`pwd`

# find the parent directory name
PARENTDIR=`dirname "${TESTPWD}"`

# fix up pathnames to be displayed
if [ "$THISPWD" == "$TESTPWD" ] ; then
	TESTDIR=""
	PARENTDIR="../"
elif [ "$THISPWD" == "$PARENTDIR" ] ; then
	TESTDIR=`basename "$TESTPWD"`/
	PARENTDIR="./"
else
	echo "cd ${TESTDIR}"
	TESTDIR=`basename "$TESTPWD"`/
	PARENTDIR="./"
fi

# check we have command1
if [ ! -x "../${command1}" ] ; then
	echo Cannot find executable ${PARENTDIR}${command1}
	exit -1
fi

# check we have command2
if [ ! -x "../${command2}" ] ; then
	echo Cannot find executable ${PARENTDIR}${command2}
	exit -1
fi

# nullglob is set so nothing runs if there are no test files
shopt -s nullglob

# test command1 | command2 with all test files that have a matching output kind file
for i in *.vm.${outputs} ; do
	input="${i%%.${outputs}}"
	if [ -f "${input}" ] ; then
		echo -n "Checking \"${PARENTDIR}${command1} < ${TESTDIR}${input} | ${PARENTDIR}${command2} | diff -w - ${TESTDIR}${i}\" - test "
		if "../${command1}" < ${input} | "../${command2}" | diff -qw - ${i} > /dev/null 2> /dev/null ; then
			echo passed
		else
			echo failed
		fi
	fi
done
